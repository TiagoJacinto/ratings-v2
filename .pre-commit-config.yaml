exclude: |
  (?x)^(
      docs/site/.*|       # Exclude mkdocs compiled files
      \.history/.*|       # Exclude history files
      .*cache.*/.*|       # Exclude cache directories
      .*venv.*/.*|        # Exclude virtual environment directories
  )$
fail_fast: true
# default_language_version:
  # python: python3.12
default_install_hook_types:
-   pre-commit
-   commit-msg
repos:
  #
  # Documentation Here:
  # https://gatlen.me/gatlens-opinionated-template/pre-commit/
  #
  # ---------------------------------------------------------------------------- #
  #                              🔄 Pre-Commit Hooks                             #
  # ---------------------------------------------------------------------------- #

  ### pre-commit updates ###

-   repo: https://gitlab.com/vojko.pribudic.foss/pre-commit-update
    rev: v0.8.0
    hooks:
    -   id: pre-commit-update
        name: "update · pre-commit hooks"

  # ----------------------------- 🔒 Security Tools ---------------------------- #

-   repo: https://github.com/gitleaks/gitleaks
    rev: v8.27.2
    hooks:
    -   id: gitleaks
        name: "🔒 security · Detect hardcoded secrets"

  # --------------------------- 🔍 Code Quality Tools -------------------------- #

  ### Javascript & Web Tools ###
-   repo: https://github.com/biomejs/pre-commit
    rev: v2.1.2
    hooks:
    -   id: biome-check
        name: "🟨 javascript · Lint, format, and unsafe fixes with Biome"
        args: ["--unsafe"]
        additional_dependencies: ["@biomejs/biome@2.1.2"]

  ### Data & Config Validation ###
-   repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.33.2
    hooks:
    -   id: check-github-workflows
        name: "🐙 github-actions · Validate gh workflow files"
        args: ["--verbose"]
    -   id: check-taskfile
        name: "✅ taskfile · Validate Task configuration"

  #STRICT
-   repo: https://github.com/markdownlint/markdownlint
    rev: v0.13.0
    hooks:
    -   id: markdownlint
        name: "📝 markdown · Lint markdown"

  ## Shell ###

  #STRICT
-   repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
    -   id: shellcheck
        name: "🐚 shell · Lint shell scripts"

  #STRICT
-   repo: https://github.com/openstack/bashate
    rev: 2.1.1
    hooks:
    -   id: bashate
        name: "🐚 shell · Check shell script code style"

  ### Makefile ###
  # - repo: https://github.com/mrtazz/checkmake.git
  #   rev: 0.2.2
  #   hooks:
  #     - id: checkmake
  #       name: "🐮 Makefile · Lint Makefile"
  #       # No clear documentation on how to skip certain checks.
  #       # Fixed as many as I could, but best option is to ignore the file.
  #       exclude: |
  #         (?x)^(
  #           .*\{\{.*\}\}.*|
  #         )$

  ### SQL ###

-   repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.4.2
    hooks:
    -   id: sqlfluff-fix
        name: "📊 SQL · Attempts to fix rule violations."
      # STRICT
      # - id: sqlfluff-lint
      #   name: "📊 SQL · Lint SQL code files"

  # I can add more file optimizers (JPG, GIF, etc.)
  ### PNG Images (Slightly lossy) ###
  # - repo: https://github.com/shssoichiro/oxipng
  #   rev: v9.1.3
  #   hooks:
  #     - id: oxipng
  #       name: "🖼️ images · Optimize PNG files"
  #       args: ["-o", "4", "--strip", "safe", "--alpha"]

  # ----------------------------- ⚡️ uv Build Tools ---------------------------- #
  # This helps ensure cross-compatibility with people who don't wish to use uv
-   repo: https://github.com/astral-sh/uv-pre-commit
    # uv version.
    rev: 0.8.0
    hooks:
      # STRICT -- This (kind of) enforces use of uv
    -   id: uv-sync
        name: "⚡️ uv · Sync dependencies with uv"
      # Update the uv lockfile
    -   id: uv-lock
        name: "⚡️ uv · Update dependency lockfile"
      # Export to txt
      # - id: uv-export
      #   name: "⚡️ uv · Export dependencies to requirements.txt"

  # ---------------------------- 📁 Filesystem Tools --------------------------- #

-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Filesystem Checks
    -   id: check-executables-have-shebangs
        name: "📁 filesystem/⚙️ exec · Verify shebang presence"
        # Exclude FastAPI directories for now
        exclude: |
          (?x)^(
            .*\{\{.*\}\}.*|
          )$
    -   id: check-shebang-scripts-are-executable
        name: "📁 filesystem/⚙️ exec · Verify script permissions"
    -   id: check-case-conflict
        name: "📁 filesystem/📝 names · Check case sensitivity"
    -   id: check-illegal-windows-names
        name: "📁 filesystem/📝 names · Validate Windows filenames"
    -   id: check-symlinks
        name: "📁 filesystem/🔗 symlink · Check symlink validity"
    -   id: destroyed-symlinks
        name: "📁 filesystem/🔗 symlink · Detect broken symlinks"
      # ------------------------------- 🌳 Git Tools ------------------------------- #
    -   id: check-merge-conflict
        name: "🌳 git · Detect conflict markers"
    -   id: forbid-new-submodules
        name: "🌳 git · Prevent submodule creation"
    -   id: check-added-large-files
        name: "🌳 git · Block large file commits"
        args: ["--maxkb=5000"]
      # - id: no-commit-to-branch
      #   alias: protect-main
      #   name: "🌳 git · Protect main branches"
      #   args: ["--branch", "main", "--branch", "master"]

  # ---------------------------------------------------------------------------- #
  #                            📝 Commit Message Hooks                           #
  # ---------------------------------------------------------------------------- #
  #
  # --------------------------- ✍️ Git Commit Quality -------------------------- #

  ### Commit Message Standards ###
-   repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
    -   id: commitizen
        name: "🌳 git · Validate commit message"
        stages: [commit-msg]
        additional_dependencies: [cz-conventional-gitmoji]

  # ---------------------------------------------------------------------------- #
  #                                  Local                                       #
  # ---------------------------------------------------------------------------- #

-   repo: local
    hooks:
    -   id: eslint
        name: "🟦 typescript · Lint with eslint"
        entry: pnpm run lint:fix:eslint
        language: system
        # types: []
        pass_filenames: false
        always_run: true

    -   id: typescript
        name: "🟦 typescript · Check types"
        entry: pnpm run types:check
        language: system
        # types: []
        pass_filenames: false
        always_run: true

    -   id: dprint
        name: "🌎 global · Format with dprint"
        entry: pnpm run format:fix:dprint --staged
        language: system
        # types: []
        pass_filenames: false
        always_run: true

      # STRICT
    -   id: unit-test
        name: 🧪 test · Run tests
        entry: pnpm run test:unit -- --testTimeout 3000
        language: system
        # types: []
        pass_filenames: false
        always_run: true

# Notes
# I can use ensemble hooks when maintaining too many hooks (Megalinter, Superlinter, qlty)
