---
exclude: |
  (?x)^(
    docs/site/.*|
    \.history/.*|
    .*cache.*/.*|
    .*venv.*/.*|
  )$
fail_fast: true
default_language_version:
  python: python3.13
default_install_hook_types:
  - pre-commit
  - commit-msg
repos:
  #
  # Documentation Here:
  # https://gatlen.me/gatlens-opinionated-template/pre-commit/
  #
  # ---------------------------------------------------------------------------- #
  #                              🔄 Pre-Commit Hooks                             #
  # ---------------------------------------------------------------------------- #

  # ### pre-commit updates ###
  - repo: https://gitlab.com/vojko.pribudic.foss/pre-commit-update
    rev: v0.8.0
    hooks:
      - id: pre-commit-update
        name: "update · pre-commit hooks"

  # --------------------------- 🔍 Code Quality Tools -------------------------- #

  ### Data & Config Validation ###
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.33.2
    hooks:
      - id: check-github-workflows
        name: "🐙 github-actions · Validate gh workflow files"
        args: ["--verbose"]
      - id: check-taskfile
        name: "✅ taskfile · Validate Task configuration"

  # ----------------------------- ⚡️ uv Build Tools ---------------------------- #
  # This helps ensure cross-compatibility with people who don't wish to use uv
  - repo: https://github.com/astral-sh/uv-pre-commit
    # uv version.
    rev: 0.8.2
    hooks:
      # STRICT -- This (kind of) enforces use of uv
      - id: uv-sync
        name: "⚡️ uv · Sync dependencies with uv"
      # Update the uv lockfile
      - id: uv-lock
        name: "⚡️ uv · Update dependency lockfile"
        # Export to txt
        # - id: uv-export
        #   name: "⚡️ uv · Export dependencies to requirements.txt"

  # ---------------------------- 📁 Filesystem Tools --------------------------- #

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Filesystem Checks
      - id: check-executables-have-shebangs
        name: 📁 filesystem/⚙️ exec · Verify shebang presence
        # Exclude FastAPI directories for now
        exclude: |
          (?x)^(
            .*\{\{.*\}\}.*|
          )$
      - id: check-shebang-scripts-are-executable
        name: "📁 filesystem/⚙️ exec · Verify script permissions"
      - id: check-case-conflict
        name: "📁 filesystem/📝 names · Check case sensitivity"
      - id: check-illegal-windows-names
        name: "📁 filesystem/📝 names · Validate Windows filenames"
      - id: check-symlinks
        name: "📁 filesystem/🔗 symlink · Check symlink validity"
      - id: destroyed-symlinks
        name: "📁 filesystem/🔗 symlink · Detect broken symlinks"
      # ------------------------------- 🌳 Git Tools ------------------------------- #
      - id: check-merge-conflict
        name: "🌳 git · Detect conflict markers"
      - id: forbid-new-submodules
        name: "🌳 git · Prevent submodule creation"
      - id: check-added-large-files
        name: "🌳 git · Block large file commits"
        args: ["--maxkb=5000"]
        # - id: no-commit-to-branch
        #   alias: protect-main
        #   name: "🌳 git · Protect main branches"
        #   args: ["--branch", "main", "--branch", "master"]

  # ---------------------------------------------------------------------------- #
  #                            📝 Commit Message Hooks                           #
  # ---------------------------------------------------------------------------- #
  #
  # --------------------------- ✍️ Git Commit Quality -------------------------- #

  # ### Commit Message Standards ###
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
      - id: commitizen
        name: "🌳 git · Validate commit message"
        stages: [commit-msg]
        additional_dependencies: [cz-conventional-gitmoji]

  # ---------------------------------------------------------------------------- #
  #                                  Local                                       #
  # ---------------------------------------------------------------------------- #

  - repo: local
    hooks:
      - id: install-dependencies
        name: 📦 pnpm · Install dependencies
        entry: pnpm install
        language: system
        pass_filenames: false
        always_run: true

      - id: typescript-type-check
        name: "🟦 typescript · Check types"
        entry: pnpm run types:check
        language: system
        pass_filenames: false
        always_run: true

      - id: trunk-lint
        name: "🌎 global · Lint with trunk.io"
        entry: pnpm run lint:fix:trunk
        language: system
        pass_filenames: false
        always_run: true

      - id: trunk-format
        name: "🌎 global · Format with trunk.io"
        entry: pnpm run format:fix:trunk
        language: system
        pass_filenames: false
        always_run: true

      - id: eslint
        name: "🟦 typescript · Lint with eslint"
        entry: pnpm run lint:fix:eslint:pre-commit
        language: system
        pass_filenames: false
        always_run: true

      - id: unit-test
        name: 🧪 test · Run tests
        entry: pnpm run test:unit:pre-commit
        language: system
        pass_filenames: false
        always_run: true
